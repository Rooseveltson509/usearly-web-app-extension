{"version":3,"file":"ExtensionContent.js","mappings":";;;;;AAAa;AACb,mBAAmB,oBAAoB;AACvC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,iEAAiE,cAAc;;AAE/E;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,WAAW;AACX,WAAW;AACX,wBAAwB;AACxB,wBAAwB;AACxB;AACA;AACA;AACA;AACA,cAAc,eAAe,SAAS,iDAAiD;AACvF;AACA;;AAEA;AACA","sources":["webpack://usearly-extension-react/./src/content/ExtensionContent.tsx"],"sourcesContent":["\"use strict\";\n/* import React, { useEffect, useRef } from 'react';\nimport ReactDOM from 'react-dom';\nimport DraggableFloatingMenu from '../components/DraggableFloatingMenu';\n\nconst ExtensionContent: React.FC = () => {\n  const shadowHostRef = useRef<HTMLDivElement>(null);\n  const [shadowRoot, setShadowRoot] = React.useState<ShadowRoot | null>(null);\n\n  useEffect(() => {\n    console.log('Je suis le shadowHostRef ...')\n    if (shadowHostRef.current && !shadowRoot) {\n      const newShadowRoot = shadowHostRef.current.attachShadow({ mode: 'open' });\n\n      const styleElem = document.createElement('style');\n      fetch(chrome.runtime.getURL('dist/contentStyles.css'))\n        .then((response) => response.text())\n        .then((css) => {\n          styleElem.textContent = css;\n          newShadowRoot.appendChild(styleElem);\n        });\n\n      setShadowRoot(newShadowRoot);\n    }\n  }, [shadowRoot]);\n\n  return shadowRoot ? (\n    ReactDOM.createPortal(\n      <DraggableFloatingMenu\n        x={100}\n        y={100}\n        onCommentClick={() => console.log('Comment clicked')}\n        onCaptureClick={() => console.log('Capture clicked')}\n      />,\n      shadowRoot\n    )\n  ) : (\n    <div ref={shadowHostRef} style={{ position: 'fixed', top: '10px', right: '10px' }} />\n  );\n};\n\nexport default ExtensionContent;\n */ \n"],"names":[],"sourceRoot":""}