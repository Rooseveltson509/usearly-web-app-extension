{"version":3,"file":"background.js","mappings":";;;;;;;;;;;;;;;;AAAA;AACO;AACP,+BAA+B,cAAc;AAC7C;AACA,KAAK;AACL;AACA;AACO;AACP;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACO;AACP;AACA;AACA,KAAK;AACL;;;;;;;UCpBA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;ACNsE;AACtE;AACA;AACA;AACA;AACA,oCAAoC,iBAAiB;AACrD;AACA;AACA,0DAA0D,eAAe;AACzE;AACA;AACA,uCAAuC,yDAAyD;AAChG;AACA;AACA,uCAAuC,iCAAiC;AACxE;AACA,iBAAiB;AACjB;AACA;AACA,+BAA+B,oDAAoD;AACnF;AACA,SAAS;AACT,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,0CAA0C;AACzE,aAAa,SAAS;AACtB;AACA;AACA,2BAA2B,oCAAoC;AAC/D;AACA,uCAAuC,kCAAkC;AACzE,aAAa;AACb,4CAA4C,yBAAyB;AACrE;AACA;AACA,yCAAyC;AACzC;AACA,oBAAoB,4DAAQ;AAC5B;AACA,mCAAmC,eAAe;AAClD;AACA;AACA;AACA,mCAAmC,mDAAmD;AACtF;AACA,aAAa;AACb;AACA;AACA;AACA,+BAA+B,sCAAsC;AACrE,aAAa;AACb;AACA;AACA;AACA,2BAA2B,yCAAyC;AACpE;AACA,qBAAqB;AACrB;AACA;AACA;AACA,QAAQ,+DAAW;AACnB,uBAAuB,eAAe;AACtC;AACA;AACA;AACA;AACA,QAAQ,4DAAQ;AAChB,2BAA2B,0BAA0B;AACrD,SAAS;AACT,qBAAqB;AACrB;AACA;AACA;AACA,uBAAuB,eAAe;AACtC;AACA;AACA;AACA;AACA,wCAAwC,yBAAyB;AACjE;AACA;AACA,2BAA2B,eAAe;AAC1C,SAAS;AACT;AACA;AACA,2BAA2B,sCAAsC;AACjE,SAAS;AACT;AACA;AACA;AACA,kBAAkB;AAClB,CAAC","sources":["webpack://usearly-extension-react/./src/utils/storageUtil.ts","webpack://usearly-extension-react/webpack/bootstrap","webpack://usearly-extension-react/webpack/runtime/define property getters","webpack://usearly-extension-react/webpack/runtime/hasOwnProperty shorthand","webpack://usearly-extension-react/webpack/runtime/make namespace object","webpack://usearly-extension-react/./src/background.ts"],"sourcesContent":["// Enregistrement du token\nexport function setToken(token) {\n    chrome.storage.local.set({ token: token }, function () {\n        console.log(\"Token enregistré dans chrome.storage\");\n    });\n}\n// Récupération du token\nexport function getToken() {\n    return new Promise(function (resolve) {\n        chrome.storage.local.get([\"token\"], function (result) {\n            console.log(\"Token récupéré depuis le stockage:\", result.token);\n            resolve(result.token || null);\n        });\n    });\n}\n// Suppression du token\nexport function removeToken() {\n    chrome.storage.local.remove(\"token\", function () {\n        console.log(\"Token supprimé de chrome.storage\");\n    });\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { setToken, removeToken, getToken } from './utils/storageUtil';\nvar API_URL = 'https://usearly-api.vercel.app/api/v1';\nchrome.runtime.onMessage.addListener(function (message, sender, sendResponse) {\n    console.log(\"Message reçu dans le script de fond :\", message);\n    if (message.action === \"captureTab\") {\n        chrome.windows.getCurrent({ populate: false }, function (window) {\n            var windowId = window === null || window === void 0 ? void 0 : window.id;\n            if (typeof windowId === \"number\") {\n                chrome.tabs.captureVisibleTab(windowId, { format: \"png\" }, function (dataUrl) {\n                    if (chrome.runtime.lastError) {\n                        console.log(\"Erreur de capture d'onglet :\", chrome.runtime.lastError.message);\n                        sendResponse({ success: false, error: chrome.runtime.lastError.message });\n                    }\n                    else {\n                        sendResponse({ success: true, dataUrl: dataUrl });\n                    }\n                });\n            }\n            else {\n                sendResponse({ success: false, error: \"ID de fenêtre non valide.\" });\n            }\n        });\n        return true; // Assurez-vous de retourner `true` pour les réponses asynchrones\n    }\n    else if (message.action === \"login\") {\n        var email = message.email, password = message.password;\n        console.log(\"Tentative de connexion pour l'utilisateur :\", email);\n        try {\n            var timeout_1 = setTimeout(function () {\n                console.log(\"Timeout pour la requête de connexion.\");\n                sendResponse({ success: false, error: 'Request timeout' });\n            }, 5000); // Timeout de 5 secondes\n            fetch(\"\".concat(API_URL, \"/user/login\"), {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                mode: 'cors',\n                body: JSON.stringify({ email: email, password: password }),\n            })\n                .then(function (response) { return response.json(); })\n                .then(function (data) {\n                console.log(\"data: \", data);\n                clearTimeout(timeout_1); // Annule le timeout si la réponse arrive\n                if (data.token) {\n                    setToken(data.token);\n                    console.log(\"Connexion réussie. Token stocké.\");\n                    sendResponse({ success: true });\n                }\n                else {\n                    console.log(\"Échec de l'authentification : aucun token reçu.\");\n                    sendResponse({ success: false, error: 'Authentification échouée' });\n                }\n            })\n                .catch(function (error) {\n                clearTimeout(timeout_1);\n                console.log(\"Erreur de connexion :\", error);\n                sendResponse({ success: false, error: error.message });\n            });\n        }\n        catch (error) {\n            console.log(\"Erreur inattendue :\", error);\n            sendResponse({ success: false, error: 'Erreur interne' });\n        }\n        return true; // Retourner `true` pour les opérations asynchrones\n    }\n    else if (message.action === \"logout\") {\n        console.log(\"Déconnexion de l'utilisateur.\");\n        removeToken();\n        sendResponse({ success: true });\n        return false;\n    }\n    else if (message.action === \"isAuthenticated\") {\n        console.log(\"Vérification de l'authentification de l'utilisateur.\");\n        getToken().then(function (token) {\n            sendResponse({ isAuthenticated: !!token });\n        });\n        return true; // Permet la réponse asynchrone\n    }\n    else if (message.action === \"test\") {\n        console.log(\"Message de test reçu du script de contenu.\");\n        sendResponse({ success: true });\n        return false;\n    }\n    else if (message.action === \"testLogin\") {\n        fetch(\"https://jsonplaceholder.typicode.com/todos/1\")\n            .then(function (response) { return response.json(); })\n            .then(function (data) {\n            console.log(\"Requête test réussie :\", data);\n            sendResponse({ success: true });\n        })\n            .catch(function (error) {\n            console.error(\"Erreur dans la requête test :\", error);\n            sendResponse({ success: false, error: error.message });\n        });\n        return true;\n    }\n    console.log(\"Action non reconnue :\", message.action);\n    return false; // Retourner `false` pour indiquer qu'il n'y a pas de réponse asynchrone\n});\n"],"names":[],"sourceRoot":""}